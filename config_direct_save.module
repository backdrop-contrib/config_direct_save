<?php

/**
 * Implements hook_menu().
 */
function config_direct_save_menu() {
  $items = [];

  $items['admin/config/development/configuration/update'] = [
    'title' => 'Update',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['config_direct_save_update_configuration_form'],
    'access callback' => 'user_access',
    'access arguments' => ['administer site configuration'],
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  ];

  return $items;
}

/**
 * Build the update configuration form.
 */
function config_direct_save_update_configuration_form($form, &$form_state) {
  // Dropdown with "Staging" as the only option, for consistency with Drupal module UI.
  $form['config_directory'] = [
    '#type' => 'select',
    '#title' => t('Config source'),
    '#description' => t('Select config source directory'),
    '#options' => ['staging' => t('Staging')], // Only one option.
    '#default_value' => 'staging',
    '#disabled' => FALSE, // Disabled to show it's not editable.
  ];

  $form['backup'] = [
    '#type' => 'checkbox',
    '#title' => t('Backup'),
    '#description' => t('Check to make a backup of the staging directory before exporting.'),
  ];

  $form['update'] = [
    '#type' => 'submit',
    '#value' => t('Export active configuration to staging'),
  ];

  return $form;
}

/**
 * Form submission handler for exporting configuration.
 */
function config_direct_save_update_configuration_form_submit($form, &$form_state) {
  $staging_directory = config_get_config_directory('staging');
  $backup = !empty($form_state['values']['backup']);
  config_direct_save_export_to_staging($staging_directory, $backup);
}

/**
 * Exports configuration files from active to the staging directory.
 *
 * @param string $staging_directory
 *   The staging configuration directory path.
 * @param bool $backup
 *   Whether to create a backup of the staging directory.
 */
function config_direct_save_export_to_staging($staging_directory, $backup) {
  // Ensure the staging directory exists.
  if (!is_dir($staging_directory)) {
    mkdir($staging_directory, 0775, TRUE);
  }

  // Create a backup of the staging directory if the backup option is selected.
  if ($backup) {
    $backup_dir = $staging_directory . '-' . date('Y-m-d-H-i-s');
    config_direct_save_recurse_copy($staging_directory, $backup_dir);
  }

  // Get the storage object for active configuration.
  $active_storage = config_get_config_storage('active');

  // Retrieve all configuration names by calling config_get_names_with_prefix() with an empty prefix.
  $config_names = config_get_names_with_prefix('');

  // Export each configuration item.
  foreach ($config_names as $config_name) {
    // Fetch configuration data from the active storage.
    $config_data = $active_storage->read($config_name);

    // Convert the configuration data to JSON.
    $json_data = json_encode($config_data, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);

    // Write the JSON data to the corresponding file in the staging directory.
    $destination_path = $staging_directory . '/' . $config_name . '.json';
    if (file_put_contents($destination_path, $json_data) === FALSE) {
      watchdog('config_direct_save', 'Failed to write configuration file %file', ['%file' => $destination_path], WATCHDOG_ERROR);
    }
  }

  backdrop_set_message(t('The active configuration has been exported to the staging directory.'));
}

/**
 * Recursively copy directory contents for backup.
 *
 * @param string $src
 *   The source directory path.
 * @param string $dst
 *   The destination directory path.
 */
function config_direct_save_recurse_copy($src, $dst) {
  if (!is_dir($dst)) {
    mkdir($dst, 0775, TRUE);
  }
  foreach (scandir($src) as $file) {
    if ($file != '.' && $file != '..') {
      $src_file = "$src/$file";
      $dst_file = "$dst/$file";
      if (is_dir($src_file)) {
        config_direct_save_recurse_copy($src_file, $dst_file);
      } else {
        copy($src_file, $dst_file);
      }
    }
  }
}
